id: https://concepts.datalad.org/ontology/datasets
name: datasets
title: Concepts for describing datasets
description: >
  Provided components are modeled after the DCAT v3 vocabulary
  (https://www.w3.org/TR/vocab-dcat-3). Within the DataLad concepts ontology
  it provides the basic framework to describe multi-version, multi-component,
  distributed data. For this purpose, a notable difference from DCAT v3
  exist. 1) Resources other than datasets can have a distribution. A key
  resource with a distribution is a file. A corresponding class has been
  added (together with a directory class). 2) A "qualified relationship"
  pattern has been applied to the `hasPart` relationship, in order to be
  able to describe the particular composition of multi-component datasets
  (from referenceable component definitions). 3) Another
  "qualified relationship" pattern has been applied to the `access_service`
  property in order to be able to specify a (deviating) resource
  identifier for requesting a particular resource from a `DataService`.
prefixes:
  afo: http://purl.allotrope.org/ontologies/result#
  DCAT: http://www.w3.org/ns/dcat#
  dctypes: http://purl.org/dc/dcmitype/
  dcterms: http://purl.org/dc/terms/
  dlco: https://concepts.datalad.org/ontology/
  linkml: https://w3id.org/linkml/
  obo: http://purl.obolibrary.org/obo/
  prov: http://www.w3.org/ns/prov#
  schema: http://schema.org/
imports:
  - ../ontology/checksumming
  - ../ontology/common
  - ../ontology/provenance
  - ../ontology/types
  - linkml:types

slots:
  access_id:
    slot_uri: dlco:access_id
    description: >-
      An identifier with which a resource distribution can be requested from a
      `DataService`.
    broad_mappings:
      - dcterms:identifier
    range: string
    related_mappings:
      - DCAT:servesDataset

  access_service:
    slot_uri: dlco:access_service
    description: >-
      A data service that gives access to the distribution of a `Resource`
    close_mappings:
      - DCAT:accessService
    range: DataService
    comments:
      - Unlike `DCAT:access_service`, this property does not restrict its
        domain to a dataset.

  access_url:
    slot_uri: dlco:access_url
    description: >-
      A URL of the resource that gives access to a distribution of the dataset.
      E.g., landing page, feed, SPARQL endpoint.
    range: uri
    close_mappings:
      - DCAT:accessURL

  byte_size:
    slot_uri: dlco:byte_size
    description: >-
      The size of a distribution in bytes.
    range: NonNegativeInteger
    exact_mappings:
      - DCAT:byteSize

  distribution:
    slot_uri: dlco:distribution
    description: >-
      An available distribution of a resource.
    range: Distribution
    close_mappings:
      - DCAT:distribution
    comments:
      - Unlike `DCAT:distribution`, this property does not restrict its domain to
        a dataset.

  download_url:
    slot_uri: dlco:download_url
    description: >-
      URL of downloadable resourcefile in a given format.
    range: uri
    exact_mappings:
      - DCAT:downloadURL

  endpoint_url:
    slot_uri: dlco:endpoint_url
    description: >-
      The root location or primary endpoint of the service
      (a resolvable IRI).
    range: uri
    exact_mappings:
      - DCAT:endpointURL

  is_version_of:
    slot_uri: dlco:is_version_of
    description: >-
      A related resource of which the described resource is a version.
    range: uriorcurie
    exact_mappings:
      - DCAT:isVersionOf

  landing_page:
    slot_uri: dlco:landing_page
    description: >-
      A Web page that can be navigated to in a Web browser to gain access
      to a resource, its distributions and/or additional information.
    range: uri
    exact_mappings:
      - DCAT:landingPage
      - foaf:page
    comments:
      - If the distribution(s) are accessible only through a landing page (i.e., direct download URLs are not known), then the landing page link SHOULD be duplicated as `dlco:access_url` on a distribution.
    see_also:
      - https://www.w3.org/TR/vocab-dcat-3/#example-landing-page

  qualified_access:
    slot_uri: dlco:qualified_access
    description: >-
      Link to a description of a `access_service` relationship with
      `DCAT:DataService`.
    broad_mappings:
      - DCAT:qualifiedRelation
    range: QualifiedAccess

  qualified_relation:
    slot_uri: dlco:qualified_relation
    description: >-
    exact_mappings:
      - DCAT:qualifiedRelation
    range: EntityInfluence

  qualified_part:
    slot_uri: dlco:qualified_part
    description: >-
      Link to a description of a `hasPart` relationship with another resource.
    broad_mappings:
      - DCAT:qualifiedRelation
    range: QualifiedPart
    todos:
      - Rename to `named_part`? See also todo for `QualifiedPart`

  keyword:
    slot_uri: dlco:keyword
    description: >-
      A keyword or tag describing the resource.
    range: string
    exact_mappings:
      - dcat:keyword
      - schema:keywords


classes:
  Resource:
    class_uri: dlco:Resource
    is_a: Entity
    mixin: true
    description: >-
      Resource published or curated by a single agent.
    slots:
      - description
      - keyword
      - has_part
      - landing_page
      - license
      - modified
      - name
      - qualified_attribution
      - qualified_relation
      - qualified_part
      - relation
      - title
      - version
      - was_attributed_to
      - was_generated_by
    slot_usage:
      has_part:
        range: Resource
        multivalued: true
      keyword:
        multivalued: true
      license:
        description: >-
          Information about licenses and rights SHOULD be provided on the
          level of a Distribution. Information about licenses and rights MAY
          be provided for a Dataset/Resource in addition to but not instead
          of the information provided for the Distributions of that Dataset.
          Providing license or rights information for a Dataset/Resource that
          is different from information provided for a Distribution of that
          Dataset SHOULD be avoided as this can create legal conflicts.
        see_also:
          - https://www.w3.org/TR/vocab-dcat-3/#license-rights
      qualified_attribution:
        multivalued: true
      qualified_relation:
        multivalued: true
      qualified_part:
        multivalued: true
        # TODO such structure-defining properties should be moved to a
        # schema class, and should not narrow the applicability of these
        # concept classes
        inlined: true
        inlined_as_list: true
      relation:
        multivalued: true
      type:
        description: >-
          Type of resource, e.g. `Dataset`.
    exact_mappings:
      - DCAT:Resource

  Relationship:
    class_uri: dlco:Relationship
    mixin: true
    is_a: EntityInfluence
    description: >-
      An association class for attaching additional information to a
      relationship between Resources/Entities
    slots:
      - relation
    slot_usage:
      relation:
        equals_expression: "{influencer}"
        todos:
          - Ideally this would be a structured_alias to `influencer`. However, this does not seem to work at all in the way that it is described.
    exact_mappings:
      - DCAT:Relationship
      - prov:EntityInfluence
    broad_mappings:
      - prov:Influence
    comments:
      - >-
        Use to characterize a relationship between datasets,
        and potentially other resources,
        where the nature of the relationship is known but is not
        adequately characterized by the standard DCTERMS or PROV
        properties.

  QualifiedAccess:
    class_uri: dlco:QualifiedAccess
    mixin: true
    is_a: Relationship
    description: >-
      An association class for attaching additional information to an
      `access_service` relationship between a `DCAT:Distribution` and
      a `DCAT:DataService`.
    broad_mappings:
      - DCAT:Relationship
    related_mappings:
      - DCAT:access_service
    slots:
      - access_id
    slot_usage:
      relation:
        range: DataService

  QualifiedPart:
    class_uri: dlco:QualifiedPart
    mixin: true
    description: >-
      An association class for attaching additional information to a
      hasPart relationship between DCAT Resources
    broad_mappings:
      - DCAT:Relationship
    slots:
      - name
      - relation
    slot_usage:
      name:
        description: >-
          The name of the part within the containing entity.
    comments:
      - This class is a key element of the data model. It enables referencing
        a particular resource (e.g., a file's content, or versioned directory
        tree in multiple contexts, such as different versions of a dataset).
    todos:
      - Rename to `NamedPart`? It would be more intuitive and is just that.

  Dataset:
    class_uri: dlco:Dataset
    mixin: true
    is_a: Resource
    description: >-
      A collection of data, published or curated,
      and available for access or download in one or more
      representations. A dataset is a conceptual entity, and can be
      represented by one or more distributions that serialize the dataset
      for transfer. Distributions of a dataset can be provided via data
      services.
    exact_mappings:
      - DCAT:Dataset
      - dctypes:Dataset
      - schema:Dataset
    slots:
      - distribution
      - is_version_of

  Distribution:
    class_uri: dlco:Distribution
    mixin: true
    description: >-
      A specific representation of a dataset (part). Such a resource
      might be available in multiple serializations.
    close_mappings:
      - DCAT:Distribution
    slots:
      - access_service
      - access_url
      - byte_size
      - checksum
      - download_url
      - has_part
      - license
      - qualified_access
      - qualified_attribution
    comments:
      - >-
        Compared to `DCAT:Distribution` this class has a `qualified_access`
        property to enable the specification of access-related parameters
        that cannot be inferred from a standard `DCAT:Distribution`.
    todos:
      - Now that there is a `Directory` subclass, re-evaluate the utility
        of the `checksum` property at this level.

  DigitalDocument:
    class_uri: dlco:DigitalDocument
    mixin: true
    is_a: Distribution
    description: >-
       A digital document (text or binary).
    slots:
      - byte_size
      - checksum
    exact_mappings:
      - schema:DigitalDocument
    broad_mappings:
      - foaf:Document
 
  FileContainer:
    class_uri: dlco:FileContainer
    mixin: true
    is_a: Distribution
    description: >-
       Container that holds references to files, or other containers.
    slots:
      - qualified_part
    slot_usage:
      qualified_part:
        range: FileContainerItem
    close_mappings:
      - obo:NCIT_C62486
    broad_mappings:
      - obo:NCIT_C49057

  FileContainerItem:
    class_uri: dlco:FileContainerItem
    mixin: true
    is_a: QualifiedPart
    description: >-
       Named reference of a content item in the context of a `FileContainer`

  DataService:
    class_uri: dlco:DataService
    mixin: true
    description: >-
      A collection of operations that provides access to one or more
      datasets or data processing functions.
    exact_mappings:
      - DCAT:DataService
    broad_mappings:
      - DCAT:Resource
      - dctypes:Service
    slots:
      - endpoint_url
